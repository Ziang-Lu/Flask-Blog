version: "3.7"

services:

  nginx:
    depends_on:
      - flask
    build: ./nginx_web_server
    # 2. Mount that Docker volume to "/static" folder in Nginx container
    volumes:
      - static_volume:/static
    ports:
      # Bind container port 80 to the host port 80
      - "80:80"
    restart: always

  flask:
    depends_on:
      - user_service
      - post_service
      - db
      - redis
    build: ./flask_app
    environment:
      - C_FORCE_ROOT=1
    # To let Nginx serve static information (like CSS files, pictures, etc.):
    # 1. Expose "/static" folder to a Docker volume
    volumes:
      - static_volume:/flask_blog_app/flask_blog/static
    expose:
      # Since we'll use Gunicorn to run the application, we need to expose its
      # default port 8000, rather than the default port 5000 of Flask
      # development server.
      - 8000
      # Note that this port is only exposed to other services in the same
      # network, but not to outside world
    restart: always

  user_service:
    depends_on:
      - db
    build: ./user_service
    expose:
      - 8000
    restart: always

  post_service:
    depends_on:
      - db
    build: ./post_service
    expose:
      - 8000
    restart: always

  db:  # Note that this is also the hostname of the "db" service container
    image: postgres:9.6
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=flask_blog
    # Persist the data stored in the database into a Docker volume
    volumes:
      - db_volume:/var/lib/postgresql/data
    expose:
      - 5432
      # Note that this port is only exposed to other services in the same
      # network, but not to outside world
    restart: always

  redis:  # Note that this is also the hostname of the "redis" service container
    image: redis
    expose:
      - 6379
      # Note that this port is only exposed to other services in the same
      # network, but not to outside world
    restart: always

volumes:
  static_volume:
  db_volume:
